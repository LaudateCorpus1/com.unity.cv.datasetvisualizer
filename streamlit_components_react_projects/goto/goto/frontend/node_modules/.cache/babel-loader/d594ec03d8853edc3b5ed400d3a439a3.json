{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\leopoldo.zugasti\\\\Desktop\\\\DatasetInsights\\\\streamlit_components\\\\gridviewsettings\\\\gridviewsettings\\\\frontend\\\\src\\\\GridViewSettings.tsx\";\nimport { StreamlitComponentBase, withStreamlitConnection } from \"streamlit-component-lib\";\nimport React from \"react\";\nimport IconButton from '@material-ui/core/IconButton';\nimport ChevronRight from '@material-ui/icons/ChevronRight';\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\n\n/**\n * This is a React-based component template. The `render()` function is called\n * automatically when your component should be re-rendered.\n */\nclass GridViewSettings extends StreamlitComponentBase {\n  constructor(...args) {\n    super(...args);\n\n    this.render = () => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(IconButton, {\n        color: \"primary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(ChevronLeft, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }\n      })), /*#__PURE__*/React.createElement(IconButton, {\n        color: \"primary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(ChevronRight, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }\n      })));\n    };\n\n    this.onClicked = () => {};\n  }\n\n} // \"withStreamlitConnection\" is a wrapper function. It bootstraps the\n// connection between your component and the Streamlit app, and handles\n// passing arguments from Python -> Component.\n//\n// You don't need to edit withStreamlitConnection (but you're welcome to!).\n\n\nexport default withStreamlitConnection(GridViewSettings);","map":{"version":3,"sources":["C:/Users/leopoldo.zugasti/Desktop/DatasetInsights/streamlit_components/gridviewsettings/gridviewsettings/frontend/src/GridViewSettings.tsx"],"names":["StreamlitComponentBase","withStreamlitConnection","React","IconButton","ChevronRight","ChevronLeft","GridViewSettings","render","onClicked"],"mappings":";AAAA,SAEEA,sBAFF,EAGEC,uBAHF,QAIO,yBAJP;AAKA,OAAOC,KAAP,MAAiC,OAAjC;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AAOA,OAAOC,YAAP,MAAyB,iCAAzB;AACA,OAAOC,WAAP,MAAwB,gCAAxB;;AAIA;AACA;AACA;AACA;AACA,MAAMC,gBAAN,SAA+BN,sBAA/B,CAAsD;AAAA;AAAA;;AAAA,SAE7CO,MAF6C,GAEpC,MAAiB;AAE/B,0BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,UAAD;AAAY,QAAA,KAAK,EAAC,SAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF,eAIE,oBAAC,UAAD;AAAY,QAAA,KAAK,EAAC,SAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CAJF,CADF;AAWD,KAfmD;;AAAA,SAkB5CC,SAlB4C,GAkBhC,MAAY,CAE/B,CApBmD;AAAA;;AAAA,C,CAuBtD;AACA;AACA;AACA;AACA;;;AACA,eAAeP,uBAAuB,CAACK,gBAAD,CAAtC","sourcesContent":["import {\n  Streamlit,\n  StreamlitComponentBase,\n  withStreamlitConnection,\n} from \"streamlit-component-lib\"\nimport React, { ReactNode } from \"react\"\nimport IconButton from '@material-ui/core/IconButton';\nimport { makeStyles } from '@material-ui/core/styles';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\nimport KeyboardVoiceIcon from '@material-ui/icons/KeyboardVoice';\nimport Icon from '@material-ui/core/Icon';\nimport SaveIcon from '@material-ui/icons/Save';\nimport ChevronRight from '@material-ui/icons/ChevronRight';\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\nimport { red } from \"@material-ui/core/colors\"\nimport { ArrowBackIos } from \"@material-ui/icons\"\n\n/**\n * This is a React-based component template. The `render()` function is called\n * automatically when your component should be re-rendered.\n */\nclass GridViewSettings extends StreamlitComponentBase {\n\n  public render = (): ReactNode => {\n\n    return (\n      <div>\n        <IconButton color=\"primary\">\n          <ChevronLeft/>\n        </IconButton>\n        <IconButton color=\"primary\">\n          <ChevronRight/>\n        </IconButton>\n      </div>\n\n    )\n  }\n\n  /** Click handler for our \"Click Me!\" button. */\n  private onClicked = (): void => {\n\n  }\n}\n\n// \"withStreamlitConnection\" is a wrapper function. It bootstraps the\n// connection between your component and the Streamlit app, and handles\n// passing arguments from Python -> Component.\n//\n// You don't need to edit withStreamlitConnection (but you're welcome to!).\nexport default withStreamlitConnection(GridViewSettings)\n"]},"metadata":{},"sourceType":"module"}