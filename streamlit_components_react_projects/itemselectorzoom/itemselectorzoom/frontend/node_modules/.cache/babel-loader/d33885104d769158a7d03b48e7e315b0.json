{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\leopoldo.zugasti\\\\Desktop\\\\DatasetInsights\\\\streamlit_components\\\\gridviewsettings\\\\gridviewsettings\\\\frontend\\\\src\\\\GridViewSettings.tsx\";\nimport { Streamlit, withStreamlitConnection } from \"streamlit-component-lib\";\nimport React, { useState } from \"react\";\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\nimport { styled } from \"@material-ui/core\";\n\nconst GridViewSettings = ({\n  props,\n  disabled\n}) => {\n  const [value, setValue] = useState({\n    startAt: 0\n  });\n\n  const handleClick = side => {\n    if (side === \"left\") {\n      setValue({\n        startAt: value.startAt + props.incrementAmt\n      });\n      Streamlit.setComponentValue(value.startAt);\n    } else if (side === \"right\") {\n      setValue({\n        startAt: value.startAt - props.incrementAmt\n      });\n      Streamlit.setComponentValue(value.startAt);\n    }\n  };\n\n  const Arrow = styled(ArrowForwardIosIcon)({});\n  const FlippedArrow = styled(ArrowForwardIosIcon)({\n    transform: \"rotate(180deg)\"\n  });\n  const FixedMarginIconButton = styled(IconButton)({\n    marginBottom: \"10px\"\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: \"100%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      position: \"relative\",\n      left: \"50%\",\n      display: \"block\",\n      marginLeft: \"auto\",\n      marginRight: \"auto\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(FixedMarginIconButton, {\n    color: \"primary\",\n    disabled: disabled,\n    onClick: () => handleClick(\"left\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(FlippedArrow, {\n    fontSize: \"large\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"h1\", {\n    style: {\n      display: \"inline-block\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }, value.startAt), /*#__PURE__*/React.createElement(FixedMarginIconButton, {\n    color: \"primary\",\n    disabled: disabled,\n    onClick: () => handleClick(\"right\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Arrow, {\n    fontSize: \"large\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }))));\n};\n/*class GridViewSettings extends StreamlitComponentBase {\n  public render = (): ReactNode => {\n\n    const FlippedArrow = styled(ArrowForwardIosIcon)({\n      transform: \"rotate(180deg)\"\n    })\n    const FixedMarginIconButton = styled(IconButton)({\n      marginBottom:\"10px\"\n    })\n\n    return (\n      <div>\n        <FixedMarginIconButton color=\"primary\">\n          <ArrowForwardIosIcon fontSize=\"large\"/>\n        </FixedMarginIconButton>\n      </div>\n\n    )\n  }\n}*/\n\n\nexport default withStreamlitConnection(GridViewSettings);","map":{"version":3,"sources":["C:/Users/leopoldo.zugasti/Desktop/DatasetInsights/streamlit_components/gridviewsettings/gridviewsettings/frontend/src/GridViewSettings.tsx"],"names":["Streamlit","withStreamlitConnection","React","useState","IconButton","ArrowForwardIosIcon","styled","GridViewSettings","props","disabled","value","setValue","startAt","handleClick","side","incrementAmt","setComponentValue","Arrow","FlippedArrow","transform","FixedMarginIconButton","marginBottom","width","position","left","display","marginLeft","marginRight"],"mappings":"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","sourcesContent":["import {\n  Streamlit,\n  withStreamlitConnection,\n  StreamlitComponentBase\n} from \"streamlit-component-lib\"\nimport React, { useState, ReactNode} from \"react\"\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\nimport { styled } from \"@material-ui/core\"\n\n\nconst GridViewSettings = ({props, disabled }: any) => {\n  const [value, setValue] = useState({startAt: 0})\n\n  const handleClick = (side: string) => {\n    if(side === \"left\") {\n      setValue({startAt: value.startAt + props.incrementAmt})\n      Streamlit.setComponentValue(value.startAt)\n    } else if (side === \"right\") {\n      setValue({startAt: value.startAt - props.incrementAmt})\n      Streamlit.setComponentValue(value.startAt)\n    }\n  }\n\n\n  const Arrow = styled(ArrowForwardIosIcon)({\n  })\n  const FlippedArrow = styled(ArrowForwardIosIcon)({\n    transform: \"rotate(180deg)\"\n  })\n  const FixedMarginIconButton = styled(IconButton)({\n    marginBottom:\"10px\"\n  })\n\n  return(\n  <div style={{width:\"100%\"}}>\n    <div style={{position: \"relative\", left: \"50%\", display: \"block\", marginLeft: \"auto\", marginRight:\"auto\"}}>\n      <FixedMarginIconButton color=\"primary\"\n                             disabled={disabled}\n                             onClick={() => handleClick(\"left\")}\n      >\n        <FlippedArrow fontSize=\"large\"/>\n      </FixedMarginIconButton>\n      <h1 style={{display:\"inline-block\"}}>{value.startAt}</h1>\n      <FixedMarginIconButton color=\"primary\"\n                             disabled={disabled}\n                             onClick={() => handleClick(\"right\")}\n      >\n        <Arrow fontSize=\"large\"/>\n      </FixedMarginIconButton>\n    </div>\n  </div>\n  )\n}\n\n/*class GridViewSettings extends StreamlitComponentBase {\n  public render = (): ReactNode => {\n\n    const FlippedArrow = styled(ArrowForwardIosIcon)({\n      transform: \"rotate(180deg)\"\n    })\n    const FixedMarginIconButton = styled(IconButton)({\n      marginBottom:\"10px\"\n    })\n\n    return (\n      <div>\n        <FixedMarginIconButton color=\"primary\">\n          <ArrowForwardIosIcon fontSize=\"large\"/>\n        </FixedMarginIconButton>\n      </div>\n\n    )\n  }\n}*/\n\nexport default withStreamlitConnection(GridViewSettings)\n"]},"metadata":{},"sourceType":"module"}