{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\leopoldo.zugasti\\\\Desktop\\\\DatasetInsights\\\\streamlit_components\\\\gridviewsettings\\\\gridviewsettings\\\\frontend\\\\src\\\\GridViewSettings.tsx\";\nimport { Streamlit, StreamlitComponentBase, withStreamlitConnection } from \"streamlit-component-lib\";\nimport React, { useEffect } from \"react\";\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\nimport { styled } from \"@material-ui/core\";\nlet state = \"idle\";\n\nconst ArrowLeft = ({\n  args,\n  disabled\n}) => {\n  useEffect(() => {\n    Streamlit.setFrameHeight(); // Button was just clicked, and component code reruns\n    // But we don't want to set component value to false yet!\n\n    if (state === \"clicked\") {\n      state = \"reset\";\n    } // A rerun was done, executing the component code again\n    // So we can safely set the component value to False (which triggers another rerun)\n    else if (state === \"reset\") {\n        Streamlit.setComponentValue(false);\n        state = \"idle\";\n      }\n  });\n\n  const handleClick = () => {\n    Streamlit.setComponentValue(true);\n    state = \"clicked\";\n  };\n\n  const FlippedArrow = styled(ArrowForwardIosIcon)({\n    transform: \"rotate(180deg)\"\n  });\n  const FixedMarginIconButton = styled(IconButton)({\n    marginBottom: \"10px\"\n  });\n  return /*#__PURE__*/React.createElement(FixedMarginIconButton, {\n    color: \"primary\",\n    onClick: handleClick,\n    disabled: disabled,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(FlippedArrow, {\n    fontSize: \"large\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }));\n};\n\nclass GridViewSettings extends StreamlitComponentBase {\n  constructor(...args) {\n    super(...args);\n\n    this.handleClick = () => {\n      Streamlit.setComponentValue(true);\n      state = \"clicked\";\n    };\n\n    this.render = () => {\n      const Arrow = styled(ArrowForwardIosIcon)({});\n      const FlippedArrow = styled(ArrowForwardIosIcon)({\n        transform: \"rotate(180deg)\"\n      });\n      const FixedMarginIconButton = styled(IconButton)({\n        marginBottom: \"10px\"\n      });\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(ArrowLeft, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(FixedMarginIconButton, {\n        color: \"primary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Arrow, {\n        fontSize: \"large\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }\n      })));\n    };\n  }\n\n}\n\nexport default withStreamlitConnection(GridViewSettings);","map":{"version":3,"sources":["C:/Users/leopoldo.zugasti/Desktop/DatasetInsights/streamlit_components/gridviewsettings/gridviewsettings/frontend/src/GridViewSettings.tsx"],"names":["Streamlit","StreamlitComponentBase","withStreamlitConnection","React","useEffect","IconButton","ArrowForwardIosIcon","styled","state","ArrowLeft","args","disabled","setFrameHeight","setComponentValue","handleClick","FlippedArrow","transform","FixedMarginIconButton","marginBottom","GridViewSettings","render","Arrow"],"mappings":";AAAA,SACEA,SADF,EAEEC,sBAFF,EAGEC,uBAHF,QAIO,yBAJP;AAKA,OAAOC,KAAP,IAA2BC,SAA3B,QAA2C,OAA3C;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AAOA,OAAOC,mBAAP,MAAgC,oCAAhC;AAGA,SAASC,MAAT,QAAuB,mBAAvB;AAEA,IAAIC,KAAK,GAAG,MAAZ;;AAEA,MAAMC,SAAS,GAAG,CAAC;AAACC,EAAAA,IAAD;AAAOC,EAAAA;AAAP,CAAD,KAA4B;AAC5CP,EAAAA,SAAS,CAAC,MAAM;AACdJ,IAAAA,SAAS,CAACY,cAAV,GADc,CAGd;AACA;;AACA,QAAIJ,KAAK,KAAK,SAAd,EAAyB;AACvBA,MAAAA,KAAK,GAAG,OAAR;AACD,KAFD,CAIE;AACF;AALA,SAMK,IAAIA,KAAK,KAAK,OAAd,EAAuB;AAC1BR,QAAAA,SAAS,CAACa,iBAAV,CAA4B,KAA5B;AACAL,QAAAA,KAAK,GAAG,MAAR;AACD;AACF,GAfQ,CAAT;;AAiBA,QAAMM,WAAW,GAAG,MAAM;AACxBd,IAAAA,SAAS,CAACa,iBAAV,CAA4B,IAA5B;AACAL,IAAAA,KAAK,GAAG,SAAR;AACD,GAHD;;AAMA,QAAMO,YAAY,GAAGR,MAAM,CAACD,mBAAD,CAAN,CAA4B;AAC/CU,IAAAA,SAAS,EAAE;AADoC,GAA5B,CAArB;AAGA,QAAMC,qBAAqB,GAAGV,MAAM,CAACF,UAAD,CAAN,CAAmB;AAC/Ca,IAAAA,YAAY,EAAC;AADkC,GAAnB,CAA9B;AAIA,sBACE,oBAAC,qBAAD;AAAuB,IAAA,KAAK,EAAC,SAA7B;AACuB,IAAA,OAAO,EAAEJ,WADhC;AAEuB,IAAA,QAAQ,EAAEH,QAFjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAIE,oBAAC,YAAD;AAAc,IAAA,QAAQ,EAAC,OAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,CADF;AAQD,CAvCD;;AAyCA,MAAMQ,gBAAN,SAA+BlB,sBAA/B,CAAsD;AAAA;AAAA;;AAAA,SAGpDa,WAHoD,GAGtC,MAAM;AAClBd,MAAAA,SAAS,CAACa,iBAAV,CAA4B,IAA5B;AACAL,MAAAA,KAAK,GAAG,SAAR;AACD,KANmD;;AAAA,SAU7CY,MAV6C,GAUpC,MAAiB;AAE/B,YAAMC,KAAK,GAAGd,MAAM,CAACD,mBAAD,CAAN,CAA4B,EAA5B,CAAd;AAEA,YAAMS,YAAY,GAAGR,MAAM,CAACD,mBAAD,CAAN,CAA4B;AAC/CU,QAAAA,SAAS,EAAE;AADoC,OAA5B,CAArB;AAGA,YAAMC,qBAAqB,GAAGV,MAAM,CAACF,UAAD,CAAN,CAAmB;AAC/Ca,QAAAA,YAAY,EAAC;AADkC,OAAnB,CAA9B;AAIA,0BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,eAIE,oBAAC,qBAAD;AAAuB,QAAA,KAAK,EAAC,SAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,KAAD;AAAO,QAAA,QAAQ,EAAC,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CAJF,CADF;AAWD,KAhCmD;AAAA;;AAAA;;AAmCtD,eAAehB,uBAAuB,CAACiB,gBAAD,CAAtC","sourcesContent":["import {\n  Streamlit,\n  StreamlitComponentBase,\n  withStreamlitConnection,\n} from \"streamlit-component-lib\"\nimport React, { ReactNode, useEffect} from \"react\"\nimport IconButton from '@material-ui/core/IconButton';\nimport { makeStyles } from '@material-ui/core/styles';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\nimport KeyboardVoiceIcon from '@material-ui/icons/KeyboardVoice';\nimport Icon from '@material-ui/core/Icon';\nimport SaveIcon from '@material-ui/icons/Save';\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\nimport { red } from \"@material-ui/core/colors\"\nimport { ArrowBackIos } from \"@material-ui/icons\"\nimport { styled } from \"@material-ui/core\"\n\nlet state = \"idle\"\n\nconst ArrowLeft = ({args, disabled }: any) => {\n  useEffect(() => {\n    Streamlit.setFrameHeight()\n\n    // Button was just clicked, and component code reruns\n    // But we don't want to set component value to false yet!\n    if (state === \"clicked\") {\n      state = \"reset\"\n    }\n\n      // A rerun was done, executing the component code again\n    // So we can safely set the component value to False (which triggers another rerun)\n    else if (state === \"reset\") {\n      Streamlit.setComponentValue(false)\n      state = \"idle\"\n    }\n  })\n\n  const handleClick = () => {\n    Streamlit.setComponentValue(true)\n    state = \"clicked\"\n  }\n\n\n  const FlippedArrow = styled(ArrowForwardIosIcon)({\n    transform: \"rotate(180deg)\"\n  })\n  const FixedMarginIconButton = styled(IconButton)({\n    marginBottom:\"10px\"\n  })\n\n  return (\n    <FixedMarginIconButton color=\"primary\"\n                           onClick={handleClick}\n                           disabled={disabled}\n    >\n      <FlippedArrow fontSize=\"large\"/>\n    </FixedMarginIconButton>\n  )\n}\n\nclass GridViewSettings extends StreamlitComponentBase {\n\n\n  handleClick = () => {\n    Streamlit.setComponentValue(true)\n    state = \"clicked\"\n  }\n\n\n\n  public render = (): ReactNode => {\n\n    const Arrow = styled(ArrowForwardIosIcon)({\n    })\n    const FlippedArrow = styled(ArrowForwardIosIcon)({\n      transform: \"rotate(180deg)\"\n    })\n    const FixedMarginIconButton = styled(IconButton)({\n      marginBottom:\"10px\"\n    })\n\n    return (\n      <div>\n        <ArrowLeft>\n\n        </ArrowLeft>\n        <FixedMarginIconButton color=\"primary\">\n          <Arrow fontSize=\"large\"/>\n        </FixedMarginIconButton>\n      </div>\n\n    )\n  }\n}\n\nexport default withStreamlitConnection(GridViewSettings)\n"]},"metadata":{},"sourceType":"module"}