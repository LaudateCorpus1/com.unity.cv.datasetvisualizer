{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\leopoldo.zugasti\\\\Desktop\\\\DatasetInsights\\\\streamlit_components\\\\imagezoom\\\\imagezoom\\\\frontend\\\\src\\\\ImageZoom.tsx\";\nimport { Streamlit, withStreamlitConnection, StreamlitComponentBase } from \"streamlit-component-lib\";\nimport React from \"react\";\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\nimport { styled, TextField } from \"@material-ui/core\";\n\nclass ImageZoom extends StreamlitComponentBase {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      startAt: 0\n    };\n\n    this.handleClick = side => {\n      let increment = this.props.args[\"incrementAmt\"];\n      let index = this.state.startAt;\n\n      if (side === \"left\") {\n        index -= increment;\n      } else if (side === \"right\") {\n        index += increment;\n      }\n\n      index = this.forceBounds(index);\n      this.setState(() => ({\n        startAt: index\n      }), () => Streamlit.setComponentValue(this.state.startAt));\n    };\n\n    this.handleIndexChange = value => {\n      let index = this.forceBounds(Number(value));\n      this.setState(() => {\n        return {\n          startAt: index\n        };\n      }, () => Streamlit.setComponentValue(this.state.startAt));\n    };\n\n    this.render = () => {\n      const Arrow = styled(ArrowForwardIosIcon)({});\n      const FlippedArrow = styled(ArrowForwardIosIcon)({\n        transform: \"rotate(180deg)\"\n      });\n      const FixedMarginIconButton = styled(IconButton)({\n        marginBottom: \"10px\"\n      });\n      return /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          width: \"100%\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"style\", {\n        dangerouslySetInnerHTML: {\n          __html: `\n            .css-9eqr5v { display: none }\n          `\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          width: \"50%\",\n          display: \"inline-block\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        style: {\n          fontFamily: \"\\\"IBM Plex Sans\\\", sans-serif\",\n          fontSize: \"1rem\",\n          color: \"rgb(38, 39, 48)\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }\n      }, \"Go to index:\"), /*#__PURE__*/React.createElement(TextField, {\n        label: \"Index\",\n        id: \"outlined-size-small\",\n        defaultValue: \"\",\n        type: \"number\",\n        variant: \"outlined\",\n        size: \"small\",\n        disabled: this.props.disabled,\n        onChange: e => this.handleIndexChange(e.target.value),\n        style: {\n          marginBottom: \"20px\",\n          marginTop: \"-10px\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          width: \"50%\",\n          display: \"inline-block\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          position: \"relative\",\n          width: \"300px\",\n          overflow: \"visible\",\n          display: \"block\",\n          marginLeft: \"auto\",\n          marginRight: \"auto\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(FixedMarginIconButton, {\n        color: \"primary\",\n        disabled: this.props.disabled || this.state.startAt == 0,\n        onClick: () => this.handleClick(\"left\"),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(FlippedArrow, {\n        fontSize: \"large\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 17\n        }\n      })), /*#__PURE__*/React.createElement(\"h1\", {\n        style: {\n          display: \"inline-block\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 15\n        }\n      }, this.state.startAt, \" - \", Math.min(this.state.startAt + this.props.args[\"incrementAmt\"] - 1, this.props.args[\"datasetSize\"] - 1)), /*#__PURE__*/React.createElement(FixedMarginIconButton, {\n        color: \"primary\",\n        disabled: this.props.disabled || this.state.startAt + this.props.args[\"incrementAmt\"] > this.props.args[\"datasetSize\"],\n        onClick: () => this.handleClick(\"right\"),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Arrow, {\n        fontSize: \"large\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 17\n        }\n      })))));\n    };\n  }\n\n  forceBounds(index) {\n    let max_size = this.props.args[\"datasetSize\"] - 1;\n\n    if (index < 0) {\n      index = 0;\n    } else if (index > max_size) {\n      index = max_size;\n    }\n\n    return index;\n  }\n\n}\n\nexport default withStreamlitConnection(ImageZoom);","map":{"version":3,"sources":["C:/Users/leopoldo.zugasti/Desktop/DatasetInsights/streamlit_components/imagezoom/imagezoom/frontend/src/ImageZoom.tsx"],"names":["Streamlit","withStreamlitConnection","StreamlitComponentBase","React","IconButton","ArrowForwardIosIcon","styled","TextField","ImageZoom","state","startAt","handleClick","side","increment","props","args","index","forceBounds","setState","setComponentValue","handleIndexChange","value","Number","render","Arrow","FlippedArrow","transform","FixedMarginIconButton","marginBottom","width","__html","display","fontFamily","fontSize","color","disabled","e","target","marginTop","position","overflow","marginLeft","marginRight","Math","min","max_size"],"mappings":"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","sourcesContent":["import {\n  Streamlit,\n  withStreamlitConnection,\n  StreamlitComponentBase\n} from \"streamlit-component-lib\"\nimport React, { ReactNode} from \"react\"\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\nimport { styled, TextField } from \"@material-ui/core\"\n\ninterface State {\n  startAt: number\n}\n\nclass ImageZoom extends StreamlitComponentBase<State> {\n  public state = {startAt: 0}\n\n  private forceBounds(index: number){\n    let max_size = this.props.args[\"datasetSize\"] - 1\n    if (index < 0){\n      index = 0\n    } else if (index > max_size) {\n      index = max_size\n    }\n    return index\n  }\n\n  private handleClick = (side: string): void => {\n    let increment = this.props.args[\"incrementAmt\"]\n    let index = this.state.startAt\n    if(side === \"left\") {\n      index -= increment\n    } else if (side === \"right\") {\n      index += increment\n    }\n    index = this.forceBounds(index)\n    this.setState(\n      () => ({startAt: index}),\n      () => Streamlit.setComponentValue(this.state.startAt)\n    )\n  }\n\n  private handleIndexChange = (value: string) => {\n    let index = this.forceBounds(Number(value))\n\n    this.setState(\n      () => {\n        return ({startAt: index})\n      },\n      () => Streamlit.setComponentValue(this.state.startAt)\n    )\n  }\n\n  public render = (): ReactNode => {\n\n    const Arrow = styled(ArrowForwardIosIcon)({})\n    const FlippedArrow = styled(ArrowForwardIosIcon)({\n      transform: \"rotate(180deg)\"\n    })\n    const FixedMarginIconButton = styled(IconButton)({\n      marginBottom: \"10px\"\n    })\n\n    return (\n        <div style={{width: \"100%\"}}>\n          <style dangerouslySetInnerHTML={{__html: `\n            .css-9eqr5v { display: none }\n          `}} />\n          <div style={{width: \"50%\", display: \"inline-block\"}}>\n            <p style={{fontFamily: \"\\\"IBM Plex Sans\\\", sans-serif\", fontSize:\"1rem\", color: \"rgb(38, 39, 48)\"}}>\n              Go to index:\n            </p>\n            <TextField\n              label=\"Index\"\n              id=\"outlined-size-small\"\n              defaultValue=\"\"\n              type=\"number\"\n              variant=\"outlined\"\n              size=\"small\"\n              disabled={this.props.disabled}\n              onChange={e => this.handleIndexChange(e.target.value)}\n              style={{\n                marginBottom: \"20px\",\n                marginTop: \"-10px\",\n              }}\n            />\n          </div>\n          <div style={{ width: \"50%\", display: \"inline-block\" }}>\n            <div style={{ position: \"relative\", width: \"300px\", overflow: \"visible\", display: \"block\", marginLeft: \"auto\", marginRight: \"auto\" }}>\n              <FixedMarginIconButton color=\"primary\"\n                                     disabled={this.props.disabled || this.state.startAt == 0}\n                                     onClick={() => this.handleClick(\"left\")}\n              >\n                <FlippedArrow fontSize=\"large\" />\n              </FixedMarginIconButton>\n              <h1 style={{ display: \"inline-block\" }}>{this.state.startAt} - {Math.min(this.state.startAt + this.props.args[\"incrementAmt\"]-1, this.props.args[\"datasetSize\"] - 1)}</h1>\n              <FixedMarginIconButton color=\"primary\"\n                                     disabled={this.props.disabled || this.state.startAt + this.props.args[\"incrementAmt\"] > this.props.args[\"datasetSize\"]}\n                                     onClick={() => this.handleClick(\"right\")}\n              >\n                <Arrow fontSize=\"large\" />\n              </FixedMarginIconButton>\n            </div>\n          </div>\n        </div>\n    )\n  }\n}\n\nexport default withStreamlitConnection(ImageZoom)\n\n"]},"metadata":{},"sourceType":"module"}