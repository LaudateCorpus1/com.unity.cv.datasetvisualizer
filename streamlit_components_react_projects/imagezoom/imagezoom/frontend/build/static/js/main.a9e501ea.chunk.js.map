{"version":3,"sources":["ItemSelector.tsx","index.tsx"],"names":["ItemSelector","state","startAt","handleClick","side","increment","props","args","index","forceBounds","setState","Streamlit","setComponentValue","handleIndexChange","value","Number","render","Arrow","styled","ArrowForwardIosIcon","FlippedArrow","transform","FixedMarginIconButton","IconButton","marginBottom","style","width","dangerouslySetInnerHTML","__html","display","fontFamily","fontSize","color","TextField","label","id","defaultValue","type","variant","size","disabled","onChange","e","target","marginTop","position","overflow","marginLeft","marginRight","onClick","Math","min","max_size","this","StreamlitComponentBase","withStreamlitConnection","ReactDOM","StrictMode","document","getElementById"],"mappings":"mSAcMA,E,4MACGC,MAAQ,CAACC,QAAS,G,EAYjBC,YAAc,SAACC,GACrB,IAAIC,EAAY,EAAKC,MAAMC,KAAX,aACZC,EAAQ,EAAKP,MAAMC,QACX,SAATE,EACDI,GAASH,EACS,UAATD,IACTI,GAASH,GAEXG,EAAQ,EAAKC,YAAYD,GACzB,EAAKE,UACH,iBAAO,CAACR,QAASM,MACjB,kBAAMG,IAAUC,kBAAkB,EAAKX,MAAMC,a,EAIzCW,kBAAoB,SAACC,GAC3B,IAAIN,EAAQ,EAAKC,YAAYM,OAAOD,IAEpC,EAAKJ,UACH,WACE,MAAQ,CAACR,QAASM,MAEpB,kBAAMG,IAAUC,kBAAkB,EAAKX,MAAMC,a,EAI1Cc,OAAS,WAEd,IAAMC,EAAQC,YAAOC,IAAPD,CAA4B,IACpCE,EAAeF,YAAOC,IAAPD,CAA4B,CAC/CG,UAAW,mBAEPC,EAAwBJ,YAAOK,IAAPL,CAAmB,CAC/CM,aAAc,SAGhB,OACI,yBAAKC,MAAO,CAACC,MAAO,SAClB,2BAAOC,wBAAyB,CAACC,OAAO,6DAGxC,yBAAKH,MAAO,CAACC,MAAO,MAAOG,QAAS,iBAClC,uBAAGJ,MAAO,CAACK,WAAY,8BAAiCC,SAAS,OAAQC,MAAO,oBAAhF,gBAGA,kBAACC,EAAA,EAAD,CACEC,MAAM,QACNC,GAAG,sBACHC,aAAa,GACbC,KAAK,SACLC,QAAQ,WACRC,KAAK,QACLC,SAAU,EAAKlC,MAAMkC,SACrBC,SAAU,SAAAC,GAAC,OAAI,EAAK7B,kBAAkB6B,EAAEC,OAAO7B,QAC/CW,MAAO,CACLD,aAAc,OACdoB,UAAW,YAIjB,yBAAKnB,MAAO,CAAEC,MAAO,MAAOG,QAAS,iBACnC,yBAAKJ,MAAO,CAAEoB,SAAU,WAAYnB,MAAO,QAASoB,SAAU,UAAWjB,QAAS,QAASkB,WAAY,OAAQC,YAAa,SAC1H,kBAAC1B,EAAD,CAAuBU,MAAM,UACNQ,SAAU,EAAKlC,MAAMkC,UAAkC,GAAtB,EAAKvC,MAAMC,QAC5C+C,QAAS,kBAAM,EAAK9C,YAAY,UAErD,kBAACiB,EAAD,CAAcW,SAAS,WAEzB,wBAAIN,MAAO,CAAEI,QAAS,iBAAmB,EAAK5B,MAAMC,QAApD,MAAgEgD,KAAKC,IAAI,EAAKlD,MAAMC,QAAU,EAAKI,MAAMC,KAAX,aAAgC,EAAG,EAAKD,MAAMC,KAAX,YAAiC,IAClK,kBAACe,EAAD,CAAuBU,MAAM,UACNQ,SAAU,EAAKlC,MAAMkC,UAAY,EAAKvC,MAAMC,QAAU,EAAKI,MAAMC,KAAX,aAAkC,EAAKD,MAAMC,KAAX,YACxF0C,QAAS,kBAAM,EAAK9C,YAAY,WAErD,kBAACc,EAAD,CAAOc,SAAS,e,iDAnF9B,SAAoBvB,GAClB,IAAI4C,EAAWC,KAAK/C,MAAMC,KAAX,YAAiC,EAMhD,OALIC,EAAQ,EACVA,EAAQ,EACCA,EAAQ4C,IACjB5C,EAAQ4C,GAEH5C,M,GAVgB8C,KA+FZC,cAAwBvD,GCzGvCwD,IAASxC,OACP,kBAAC,IAAMyC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.a9e501ea.chunk.js","sourcesContent":["import {\n  Streamlit,\n  withStreamlitConnection,\n  StreamlitComponentBase\n} from \"streamlit-component-lib\"\nimport React, { ReactNode} from \"react\"\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\nimport { styled, TextField } from \"@material-ui/core\"\n\ninterface State {\n  startAt: number\n}\n\nclass ItemSelector extends StreamlitComponentBase<State> {\n  public state = {startAt: 0}\n\n  private forceBounds(index: number){\n    let max_size = this.props.args[\"datasetSize\"] - 1\n    if (index < 0){\n      index = 0\n    } else if (index > max_size) {\n      index = max_size\n    }\n    return index\n  }\n\n  private handleClick = (side: string): void => {\n    let increment = this.props.args[\"incrementAmt\"]\n    let index = this.state.startAt\n    if(side === \"left\") {\n      index -= increment\n    } else if (side === \"right\") {\n      index += increment\n    }\n    index = this.forceBounds(index)\n    this.setState(\n      () => ({startAt: index}),\n      () => Streamlit.setComponentValue(this.state.startAt)\n    )\n  }\n\n  private handleIndexChange = (value: string) => {\n    let index = this.forceBounds(Number(value))\n\n    this.setState(\n      () => {\n        return ({startAt: index})\n      },\n      () => Streamlit.setComponentValue(this.state.startAt)\n    )\n  }\n\n  public render = (): ReactNode => {\n\n    const Arrow = styled(ArrowForwardIosIcon)({})\n    const FlippedArrow = styled(ArrowForwardIosIcon)({\n      transform: \"rotate(180deg)\"\n    })\n    const FixedMarginIconButton = styled(IconButton)({\n      marginBottom: \"10px\"\n    })\n\n    return (\n        <div style={{width: \"100%\"}}>\n          <style dangerouslySetInnerHTML={{__html: `\n            .css-9eqr5v { display: none }\n          `}} />\n          <div style={{width: \"50%\", display: \"inline-block\"}}>\n            <p style={{fontFamily: \"\\\"IBM Plex Sans\\\", sans-serif\", fontSize:\"1rem\", color: \"rgb(38, 39, 48)\"}}>\n              Go to index:\n            </p>\n            <TextField\n              label=\"Index\"\n              id=\"outlined-size-small\"\n              defaultValue=\"\"\n              type=\"number\"\n              variant=\"outlined\"\n              size=\"small\"\n              disabled={this.props.disabled}\n              onChange={e => this.handleIndexChange(e.target.value)}\n              style={{\n                marginBottom: \"20px\",\n                marginTop: \"-10px\",\n              }}\n            />\n          </div>\n          <div style={{ width: \"50%\", display: \"inline-block\" }}>\n            <div style={{ position: \"relative\", width: \"300px\", overflow: \"visible\", display: \"block\", marginLeft: \"auto\", marginRight: \"auto\" }}>\n              <FixedMarginIconButton color=\"primary\"\n                                     disabled={this.props.disabled || this.state.startAt == 0}\n                                     onClick={() => this.handleClick(\"left\")}\n              >\n                <FlippedArrow fontSize=\"large\" />\n              </FixedMarginIconButton>\n              <h1 style={{ display: \"inline-block\" }}>{this.state.startAt} - {Math.min(this.state.startAt + this.props.args[\"incrementAmt\"]-1, this.props.args[\"datasetSize\"] - 1)}</h1>\n              <FixedMarginIconButton color=\"primary\"\n                                     disabled={this.props.disabled || this.state.startAt + this.props.args[\"incrementAmt\"] > this.props.args[\"datasetSize\"]}\n                                     onClick={() => this.handleClick(\"right\")}\n              >\n                <Arrow fontSize=\"large\" />\n              </FixedMarginIconButton>\n            </div>\n          </div>\n        </div>\n    )\n  }\n}\n\nexport default withStreamlitConnection(ItemSelector)\n\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport ItemSelector from \"./ItemSelector\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <ItemSelector />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n)\n"],"sourceRoot":""}